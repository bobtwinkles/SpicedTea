package tk.sirtwinkles.spicedtea.world.gen.bspdungeon;

import static tk.sirtwinkles.spicedtea.MathUtils.abs;
import static tk.sirtwinkles.spicedtea.MathUtils.random;

import java.util.LinkedList;

import tk.sirtwinkles.spicedtea.world.Point;

public class LineUtils {

	private static final int MAX_COUNT = 100;
	private static final double ZIG_CHANGE = 0.1;

	/**
	 * 
	 * @param tr
	 * @param sx
	 * @param ex
	 */
	public static void drawZigZag(LinkedList<Point> tr, Point sp, Point ep) {
		Point cp = Point.getPoint(sp.x, sp.y);
		Point remain = Point.getPoint();
		Point delta = Point.getPoint();
		int count = 1;
		tr.add(Point.getPoint(cp.x, cp.y));
		
		while (count < MAX_COUNT && (cp.x != ep.x && cp.y != ep.y)) {
			remain.x = abs(ep.x - cp.x);
			remain.y = abs(ep.y - cp.y);
			
			if ((count == 1 || random.nextFloat() < ZIG_CHANGE)||
					(abs(ep.x - (cp.y + delta.x)) > remain.x) ||
					(abs(ep.y - (cp.y + delta.x)) > remain.y)
					) {
				if (random.nextInt(remain.x + remain.y) < remain.x) {
					if (delta.x != 0) {
						delta.y = 0;
					}
				} else {
					if (delta.y != 0) {
						delta.x = 0;
					}
				}
			}
			
			cp.x += delta.x;
			cp.y += delta.y;
			
			tr.add(Point.getPoint(cp.x, cp.y));
		}
		
		Point.free(delta);
		Point.free(remain);
		Point.free(cp);
	}
}
